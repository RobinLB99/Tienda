package robinlb99.tienda.igu.Ver_ventas;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import robinlb99.tienda.igu.Window;
import robinlb99.tienda.logica.Cliente;
import robinlb99.tienda.logica.LogicController;
import robinlb99.tienda.logica.Pedido;

public class VerVentas extends javax.swing.JFrame {
    
    LogicController control = new LogicController();
    Window ventana = new Window();
    
    Pedido pedidos = null;
    ArrayList<Pedido> registroPedidos = null;
    
    String tipoFiltro;

    /**
     * Creates new form VerVentas
     */
    public VerVentas() {
        initComponents();
        
        registroPedidos = control.listaPedidos();
        cargarTabla();
        
        
        // Aplicar tipo de filtro
        btnAplicar.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                
                if (comBoxTipoFiltro.getSelectedIndex() == 0) {
                    ventana.mensaje("Tipo de filtro invalido", "warning", "El filtro que escogio no es valido");
                    comBoxTipoFiltro.grabFocus();
                } else if (comBoxTipoFiltro.getSelectedIndex() == 1) {
                    tipoFiltro = "cedula";
                    txtFiltroCedula.setEnabled(true);
                    comBoxCancelado.setEnabled(false);
                    btnFiltrar.setEnabled(true);
                } else {
                    tipoFiltro = "deuda";
                    txtFiltroCedula.setEnabled(false);
                    comBoxCancelado.setEnabled(true);
                    btnFiltrar.setEnabled(true);
                }
                
            }
            
        });
        
        // Filtrar tabla
        btnFiltrar.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                
                if (tipoFiltro.equals("cedula")) {
                    ArrayList<Pedido> filtrado = filtrarPedido(registroPedidos, tipoFiltro, txtFiltroCedula.getText());
                    
                    if (filtrado.size() == 0) {
                        
                        ventana.mensaje("Registro no encontrado", "warning", "El resgistro buscado no ha sido encontrado.\nPor favor, verifique que el numero de cedula es el correcto.");
                        txtFiltroCedula.setText("");
                        txtFiltroCedula.grabFocus();
                        
                    } else {
                        
                        cargarTablaFiltrada(filtrado);
                        BorrarFiltro.setEnabled(true);
                        
                    }
                    
                } else if (tipoFiltro.equals("deuda")) {
                    
                    if (comBoxCancelado.getSelectedIndex() == 1) {
                        ArrayList<Pedido> filtrado = filtrarPedido(registroPedidos, tipoFiltro, "Cancelado");
                        cargarTablaFiltrada(filtrado);
                        BorrarFiltro.setEnabled(true);
                    } else if (comBoxCancelado.getSelectedIndex() == 2) {
                        ArrayList<Pedido> filtrado = filtrarPedido(registroPedidos, tipoFiltro, "Pendiente");
                        cargarTablaFiltrada(filtrado);
                        BorrarFiltro.setEnabled(true);
                    } else {
                        ventana.mensaje("Estado no valido", "warning", "Estado de pedido no valido.\nEscoja un estado valido");
                        comBoxCancelado.grabFocus();
                    }
                    
                }
                
                
            }
        });
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        comBoxTipoFiltro = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        dataTable = new javax.swing.JTable();
        btnAtras = new javax.swing.JButton();
        btnVerProductos = new javax.swing.JButton();
        BorrarFiltro = new javax.swing.JButton();
        txtFiltroCedula = new javax.swing.JTextField();
        btnFiltrar = new javax.swing.JButton();
        comBoxCancelado = new javax.swing.JComboBox<>();
        btnAplicar = new javax.swing.JButton();
        btnCobrarPendiente = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText(" Ventas realizadas");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/buscar-24px.png"))); // NOI18N
        jLabel2.setText("Filtrar por");
        jLabel2.setIconTextGap(10);

        comBoxTipoFiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Cedula/Deuda-", "Cedula del cliente", "Deuda" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comBoxTipoFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(comBoxTipoFiltro)
        );

        dataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(dataTable);

        btnAtras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/deshacer-16px.png"))); // NOI18N
        btnAtras.setText("Atras");
        btnAtras.setIconTextGap(10);
        btnAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasActionPerformed(evt);
            }
        });

        btnVerProductos.setText("Ver productos");
        btnVerProductos.setEnabled(false);
        btnVerProductos.setIconTextGap(10);
        btnVerProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerProductosActionPerformed(evt);
            }
        });

        BorrarFiltro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/borrar-24px.png"))); // NOI18N
        BorrarFiltro.setText("Borrar filtro");
        BorrarFiltro.setEnabled(false);
        BorrarFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BorrarFiltroActionPerformed(evt);
            }
        });

        txtFiltroCedula.setEnabled(false);

        btnFiltrar.setText("Filtrar");
        btnFiltrar.setEnabled(false);
        btnFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltrarActionPerformed(evt);
            }
        });

        comBoxCancelado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Cancelado/Pendiente-", "Cancelado", "Pendiente" }));
        comBoxCancelado.setEnabled(false);
        comBoxCancelado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comBoxCanceladoActionPerformed(evt);
            }
        });

        btnAplicar.setText("Aplicar");
        btnAplicar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAplicarActionPerformed(evt);
            }
        });

        btnCobrarPendiente.setText("Cobrar pendiente");
        btnCobrarPendiente.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAplicar)
                        .addGap(62, 62, 62)
                        .addComponent(comBoxCancelado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFiltroCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFiltrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BorrarFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnVerProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCobrarPendiente)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnFiltrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BorrarFiltro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAplicar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtFiltroCedula)
                    .addComponent(comBoxCancelado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 442, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnVerProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnCobrarPendiente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BorrarFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BorrarFiltroActionPerformed
        cargarTabla();
        BorrarFiltro.setEnabled(false);
        comBoxTipoFiltro.setSelectedIndex(0);
        comBoxCancelado.setSelectedIndex(0);
        comBoxCancelado.setEnabled(false);
        txtFiltroCedula.setText("");
        txtFiltroCedula.setEnabled(false);
        btnFiltrar.setEnabled(false);
    }//GEN-LAST:event_BorrarFiltroActionPerformed

    private void btnAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasActionPerformed
        this.dispose();
        ventana.menu();
    }//GEN-LAST:event_btnAtrasActionPerformed

    private void btnVerProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerProductosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnVerProductosActionPerformed

    private void btnAplicarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAplicarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAplicarActionPerformed

    private void btnFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltrarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnFiltrarActionPerformed

    private void comBoxCanceladoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comBoxCanceladoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comBoxCanceladoActionPerformed

    
    private void cargarTabla() {
        // Definir modelo de tabla
        DefaultTableModel tablaModel = new DefaultTableModel() {
            // Filas y columnas no editables.
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        // Establecer los nombres de las columnas
        String titulos[] = {"ID", "Fecha", "Nombres", "Apellidos", "Cedula", "Productos","Valor", "Deuda", };
        tablaModel.setColumnIdentifiers(titulos);

        // Recorrer datos y mostrarlos
        if (registroPedidos != null) {
            for (Pedido pedido : registroPedidos) {

                Object[] objeto = {pedido.getId(), pedido.getFecha(), pedido.getCliente().getNombres(), pedido.getCliente().getApellidos(), pedido.getCliente().getCI(), pedido.getProductos().size() + " productos", pedido.getValorCompra(), pedido.getIsCancel()};
                tablaModel.addRow(objeto);

            }
        }

        dataTable.setModel(tablaModel);

    }
    
    private void cargarTablaFiltrada(ArrayList<Pedido> pedidosFiltrados) {
        // Definir modelo de tabla
        DefaultTableModel tablaModel = new DefaultTableModel() {
            // Filas y columnas no editables.
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        // Establecer los nombres de las columnas
        String titulos[] = {"ID", "Fecha", "Nombres", "Apellidos", "Cedula", "Productos", "Valor", "Deuda",};
        tablaModel.setColumnIdentifiers(titulos);

        // Recorrer datos y mostrarlos
        if (registroPedidos != null) {
            for (Pedido pedido : pedidosFiltrados) {

                Object[] objeto = {pedido.getId(), pedido.getFecha(), pedido.getCliente().getNombres(), pedido.getCliente().getApellidos(), pedido.getCliente().getCI(), pedido.getProductos().size() + " productos", pedido.getValorCompra(), pedido.getIsCancel()};
                tablaModel.addRow(objeto);

            }
        }

        dataTable.setModel(tablaModel);

    }
    
    public ArrayList<Pedido> filtrarPedido(ArrayList<Pedido> pedidos, String filtro, String criterio) {
        ArrayList<Pedido> registroFiltrado = new ArrayList<>();

        if (filtro.equals("cedula")) {
            
            for (Pedido pedido : pedidos) {
                
                if (pedido.getCliente().getCI().equals(criterio)) {
                    
                    registroFiltrado.add(pedido);
                    
                }
                
            }
            
        } else if (filtro.equals("deuda")) {
            
            for (Pedido pedido : pedidos) {

                if (pedido.getIsCancel().equals(criterio)) {

                    registroFiltrado.add(pedido);

                }

            }
            
        }

        return registroFiltrado;
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BorrarFiltro;
    private javax.swing.JButton btnAplicar;
    private javax.swing.JButton btnAtras;
    private javax.swing.JToggleButton btnCobrarPendiente;
    private javax.swing.JButton btnFiltrar;
    private javax.swing.JButton btnVerProductos;
    private javax.swing.JComboBox<String> comBoxCancelado;
    private javax.swing.JComboBox<String> comBoxTipoFiltro;
    private javax.swing.JTable dataTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtFiltroCedula;
    // End of variables declaration//GEN-END:variables
}
